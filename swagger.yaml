paths:
  /login/v1/authenticate:
    post:
      summary: Autentica al usuario y genera un token JWT.
      tags:
        - Autenticación
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "usuario@example.com"
                password:
                  type: string
                  example: "123456"
      responses:
        200:
          description: Autenticación exitosa
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    description: Token JWT válido por 1 hora
        400:
          description: Datos faltantes o inválidos
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "No se enviaron datos o faltan campos obligatorios"
        401:
          description: Credenciales incorrectas
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Usuario o contraseña incorrectos"

  /observations/v1/add_observation/{project_id}:
    post:
      tags:
        - Observations
      summary: Agregar una observación a un proyecto
      description: Crea una nueva observación para un proyecto específico. Requiere token JWT y permiso `add_observation`.
      parameters:
        - name: project_id
          in: path
          description: ID del proyecto al que se agregará la observación
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - description
              properties:
                name:
                  type: string
                  example: "Revisión de infraestructura"
                description:
                  type: string
                  example: "Se detectó necesidad de mejora en el pavimento"
      responses:
        201:
          description: Observación agregada correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Observación 'Revisión de infraestructura' agregada correctamente al proyecto 12"
        400:
          description: Datos faltantes o inválidos
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Faltan campos obligatorios"
        401:
          description: Usuario no autenticado / token faltante o expirado
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Token faltante"
        403:
          description: Permiso denegado
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Permiso denegado"
        404:
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Usuario no encontrado"
